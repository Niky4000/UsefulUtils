Мне удалось скачать видео с boomstream!
Вот это очень хорошая ссылка, которая всё поясняет:
https://idof.medium.com/download-and-decrypt-aes-128-m3u8-playlists-495c12d6543a
Суть тут в том, что boomstream передаёт видео, порезанное на кусочки, представляющие собой множество файликов ts, причём зашифрованных алгоритмом aes-128!
В консоли браузера по F12 можно увидеть, что скачивается файлик playlist.m3u8.
В его содержимом есть такая строчка:
#EXT-X-KEY:METHOD=AES-128,URI="[KEY]",IV=[IV]
В норме URI="[KEY]" должен ссылаться на private key для расшифровки содержимого, а IV - это initialization vector, должен присутствовать прям в этом файлике. Но их тут нету! Хитрые товарищи с boomstream решили усложнить нам жизнь при помощи JavaScript!
Эта строчка в норме должна выглядеть примерно так:
#EXT-X-KEY:METHOD=AES-128,URI="/home/me/Downloads/tmp2/key.txt",IV=0x776e656a31616d6e5638524d69445a4b
В файлике key.txt должно быть примерно следующее:
LuhKJ8gWyK8LZ3Ks
Это private key!
Initialization vector я пока не понял откуда берётся, но его можно перехватить в отладчике Java Script в браузере.
То есть пока это такая достаточно муторная ручная процедура, которую пока не понятно как автоматизировать, так как для большого количества видео руками всё это проделывать - это кошмар.
В итоге мы получаем private key и initialization vector. Модифицируем исходный playlist.m3u8, а далее выполняем вот такую команду:
ffmpeg -allowed_extensions ALL -protocol_whitelist file,http,https,tcp,tls,crypto -i /home/me/Downloads/tmp/playlist.m3u8 -c copy output.mp4
ffmpeg сам прочитает этот playlist, так как его формат он понимает и сам расшифрует все эти мелкие файлики ts и сольёт всё это в mp4!
Вот! Разбирался с этим целый день! Но в итоге решил эту проблему!
